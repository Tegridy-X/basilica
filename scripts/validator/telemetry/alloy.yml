logging {
  level = "info"
  format = "logfmt"
}

loki.write "default" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

discovery.docker "containers" {
  host = "unix:///var/run/docker.sock"
}

loki.source.docker "validator_logs" {
  host       = "unix:///var/run/docker.sock"
  targets    = discovery.docker.containers.targets
  forward_to = [loki.process.validator_filter.receiver]
  
  relabel_configs = [
    {
      source_labels = ["__meta_docker_container_name"]
      target_label  = "container_name"
    },
    {
      source_labels = ["__meta_docker_container_label_com_docker_compose_service"]
      target_label  = "service"
    },
  ]
}

loki.process "validator_filter" {
  forward_to = [loki.write.default.receiver]
  
  stage.match {
    selector = `{container_name="basilica-validator"}`
    
    stage.regex {
      expression = `(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)\s+(?P<level>\w+)\s+(?P<target>[\w:]+)\s+(?P<message>.*)`
    }
    
    stage.labels {
      values = {
        level = "level",
        target = "target",
      }
    }
  }
}

loki.source.file "validator_file_logs" {
  targets = [
    {
      __path__ = "/var/log/basilica/*.log"
      job      = "validator_files"
      service  = "validator"
    },
  ]
  forward_to = [loki.process.file_processor.receiver]
}

loki.process "file_processor" {
  forward_to = [loki.write.default.receiver]
  
  stage.regex {
    expression = `(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)\s+(?P<level>\w+)\s+(?P<target>[\w:]+)\s+(?P<message>.*)`
  }
  
  stage.labels {
    values = {
      level = "level",
      target = "target",
    }
  }
}

prometheus.exporter.unix "system" {
  include_exporter_metrics = true
}

prometheus.scrape "system" {
  targets    = prometheus.exporter.unix.system.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}